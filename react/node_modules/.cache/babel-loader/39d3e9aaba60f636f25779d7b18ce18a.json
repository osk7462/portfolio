{"ast":null,"code":"var _jsxFileName = \"/home/osama/Documents/portfolio/react/src/component/dialog/CUDProjectDialog.js\";\nimport React from 'react'; // MuiComponent\n\nimport { Dialog as MuiDialog } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { TextField as MuiTextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { GlobalContext } from '../../ContextApi';\nimport axiosInstance from '../../axios';\nimport axios from 'axios';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useHistory } from 'react-router-dom';\nimport { FormControl } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0\n  },\n  input: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    '& form > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  closeButton: {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n  skills: {\n    fontWeight: 800,\n    opacity: 0.8\n  },\n  skillRoot: {\n    display: 'flex',\n    alignItems: 'baseline',\n    '& > *': {\n      margin: theme.spacing(0.3)\n    }\n  },\n  btnSubmit: {\n    background: theme.palette.success.dark,\n    color: 'white',\n    '&:hover': {\n      background: theme.palette.success.dark\n    }\n  }\n}));\n\nconst TextField = ({ ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(MuiTextField, {\n    size: \"small\",\n    variant: \"outlined\",\n    ...others\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TextField;\n\nconst InputButton = ({\n  children,\n  ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    ...others,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputButton;\n\nconst slugify = text => {\n  return text.toString().toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w\\-]+/g, '').replace(/\\-\\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n};\n\nconst typeOfAction = action => {\n  return action.type === 'UPDATE';\n};\n\nconst getSelectedText = action => {\n  var _s = $RefreshSig$();\n\n  return _s(function CUDProjectDialog({\n    open,\n    setOpen,\n    action\n  }) {\n    _s();\n\n    const {\n      skills\n    } = GlobalContext();\n    const [selectedSkills, setSelectedSkills] = React.useState([]);\n    const [update, setupdate] = React.useState(typeOfAction(action));\n    const [project, setProject] = React.useState(action.project);\n    console.log( // typeof(action.project.name),\n    action.type, update);\n    const history = useHistory();\n    const form = React.useRef(null);\n    const classes = useStyles();\n\n    const handleChangeMultiple = e => {\n      const {\n        options\n      } = e.target;\n      const value = [];\n\n      for (let i = 0; i < options.length; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n\n      setSelectedSkills(value);\n    };\n\n    const handleChange = e => {\n      console.log(e.target.name);\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData(form.current);\n      formData.append('slug', slugify(formData.get('project')));\n      const config = {\n        headers: {\n          Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null,\n          'Content-Type': 'multipart-form-data'\n        }\n      };\n      const url = `http://127.0.0.1:8000/projects/`;\n      axios.post(url, formData, config).then(response => console.log(response)).catch(error => console.log(error));\n    };\n\n    return /*#__PURE__*/_jsxDEV(MuiDialog, {\n      open: open,\n      maxWidth: \"sm\",\n      onClose: () => setOpen(true),\n      classes: {\n        paper: classes.paper\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          align: \"right\",\n          color: \"secondary\",\n          className: classes.closeButton,\n          onClick: () => setOpen(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            ref: form,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: classes.input,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                name: \"project\",\n                label: \"project\",\n                inputProps: update ? {\n                  value: project.project,\n                  onChange: handleChange\n                } : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                name: \"name\",\n                label: \"name\",\n                inputProps: update ? {\n                  value: project.name,\n                  onChange: handleChange\n                } : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                name: \"description\",\n                label: \"description\",\n                multiline: true,\n                rows: 5,\n                inputProps: update ? {\n                  value: project.description,\n                  onChange: handleChange\n                } : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                name: \"link\",\n                label: \"link\",\n                inputProps: update ? {\n                  value: project.link,\n                  onChange: handleChange\n                } : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  name: \"project_images\",\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  shrink: true,\n                  htmlFor: \"select-multiple-native\",\n                  children: \"Skills\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"skills\",\n                  multiple: true,\n                  native: true,\n                  value: selectedSkills,\n                  onChange: handleChangeMultiple,\n                  inputProps: {\n                    id: 'select-multiple-native'\n                  },\n                  children: skills.map(skill => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: skill.name,\n                    children: skill.name\n                  }, skill.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              className: classes.btnSubmit,\n              onClick: e => handleSubmit(e),\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this);\n  }, \"2vLmi9NwTZ9GzStiYzVwZOkdh8w=\", false, function () {\n    return [useHistory, useStyles];\n  });\n};\n\nexport default CUDProjectDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"InputButton\");","map":{"version":3,"sources":["/home/osama/Documents/portfolio/react/src/component/dialog/CUDProjectDialog.js"],"names":["React","Dialog","MuiDialog","DialogTitle","DialogContent","Typography","Grid","TextField","MuiTextField","Button","makeStyles","GlobalContext","axiosInstance","axios","IconButton","DeleteIcon","useHistory","FormControl","InputLabel","Select","useStyles","theme","paper","position","top","input","margin","spacing","closeButton","marginLeft","fontSize","skills","fontWeight","opacity","skillRoot","display","alignItems","btnSubmit","background","palette","success","dark","color","others","InputButton","children","slugify","text","toString","toLowerCase","replace","typeOfAction","action","type","getSelectedText","CUDProjectDialog","open","setOpen","selectedSkills","setSelectedSkills","useState","update","setupdate","project","setProject","console","log","history","form","useRef","classes","handleChangeMultiple","e","options","target","value","i","length","selected","push","handleChange","name","handleSubmit","preventDefault","formData","FormData","current","append","get","config","headers","Authorization","localStorage","getItem","url","post","then","response","catch","error","onChange","undefined","description","link","id","map","skill"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\n// MuiComponent\nimport {Dialog as MuiDialog} from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport {DialogContent} from '@material-ui/core'\nimport {Typography} from '@material-ui/core'\nimport {Grid} from '@material-ui/core'\nimport {TextField as MuiTextField} from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport {GlobalContext} from '../../ContextApi'\nimport axiosInstance from '../../axios'\nimport axios from 'axios'\nimport { IconButton } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useHistory} from 'react-router-dom'\nimport { FormControl } from '@material-ui/core'\nimport { InputLabel } from '@material-ui/core'\nimport {Select} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme=> ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n  },\n  input : {\n    '& > *':{\n      margin: theme.spacing(1)\n    },\n    '& form > *':{\n      margin: theme.spacing(1)\n    }\n    \n  },\n\n  closeButton : {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n\n  skills : {\n    fontWeight: 800,\n    opacity: 0.8\n  },\n\n  skillRoot: {\n    display: 'flex',\n    alignItems: 'baseline',\n  \n    '& > *': {\n      margin: theme.spacing(0.3)\n    },\n    \n    \n  },\n\n  btnSubmit: {\n    background: theme.palette.success.dark,\n    color: 'white',\n\n    '&:hover': {\n      background: theme.palette.success.dark\n    }\n  },\n\n\n\n}))\n\n\n\nconst TextField = ({...others}) => {\n  return (\n    <MuiTextField \n      size=\"small\"\n      variant=\"outlined\"\n      {...others}\n    />\n  )\n}\n\nconst InputButton = ({children, ...others}) => {\n  return (\n    <Button \n      variant=\"contained\"\n      component=\"label\"\n      color='primary'\n      {...others}\n    >\n      {children}\n    </Button>\n  )\n}\n\n\nconst slugify = (text) => {\n  return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')   \n    .replace(/[^\\w\\-]+/g, '')   \n    .replace(/\\-\\-+/g, '-')         \n    .replace(/^-+/, '')           \n    .replace(/-+$/, ''); \n}\n\n\nconst typeOfAction = (action) => {\n\n  return action.type === 'UPDATE'\n}\n\nconst getSelectedText = (action) => \n\nfunction CUDProjectDialog({open, setOpen, action}) {\n  const {skills} = GlobalContext()\n  const[selectedSkills, setSelectedSkills] = React.useState([])\n  const [update, setupdate] = React.useState(typeOfAction(action))\n  const [project, setProject] = React.useState(action.project)\n\n  console.log(\n    // typeof(action.project.name),\n    action.type\n    ,update\n    )\n\n\n  const history = useHistory()\n  const form = React.useRef(null)\n\n  const classes = useStyles()\n\n  const handleChangeMultiple = (e) => {\n    const {options} = e.target\n    const value = []\n    for(let i=0; i<options.length; i++){\n      if (options[i].selected) {\n      value.push(options[i].value)\n      }\n    }\n    setSelectedSkills(value)\n  }\n  \n  const handleChange = (e) => {\n    console.log(e.target.name)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const formData = new FormData(form.current)\n    formData.append('slug', slugify(formData.get('project')))\n\n\n\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem('access_token')\n      ? 'JWT ' + localStorage.getItem('access_token')\n      : null,\t\n        'Content-Type': 'multipart-form-data'\n      }\n    }\n    const url = `http://127.0.0.1:8000/projects/`\n\n    axios.post(url, formData, config)\n    .then(response => console.log(response))\n    .catch(error => console.log(error))\n\n  }\n\n  return (\n    <MuiDialog \n      open={open}\n      maxWidth=\"sm\"\n      onClose={()=>setOpen(true)}\n      classes = {{paper: classes.paper}}\n    >\n      <DialogTitle>\n        <Button\n         align=\"right\"\n         color='secondary'\n         className={classes.closeButton}\n         onClick={()=>setOpen(false)}\n        >\n          X\n        </Button>\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container justify=\"center\" >\n            <form ref={form}>\n              <Grid item xs={12} className={classes.input}>\n                <TextField \n                  fullWidth\n                  name=\"project\"\n                  label=\"project\"\n                  inputProps={\n                    update ? {\n                      value: project.project,\n                      onChange: handleChange\n                    } : undefined\n                  }  \n                />\n                <TextField \n                  fullWidth\n                  name=\"name\"\n                  label=\"name\"  \n                  inputProps={\n                    update ? {\n                      value: project.name,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                />\n                <TextField \n                  fullWidth\n                  name=\"description\"\n                  label=\"description\"  \n                  multiline\n                  rows={5}\n                  inputProps={\n                    update ? {\n                      value: project.description,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                />\n                <TextField \n                  fullWidth\n                  name=\"link\"\n                  label=\"link\"  \n                  inputProps={\n                    update ? {\n                      value: project.link,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                  \n                />\n\n                <InputButton>\n\n                  <input \n                    type='file'\n                    accept='image/*'\n                    name='project_images'\n                    multiple={true}\n                    \n                  />\n                </InputButton>\n                \n               \n                <FormControl fullWidth >\n                  <InputLabel shrink htmlFor=\"select-multiple-native\">\n                    Skills\n                  </InputLabel>\n                  <Select\n                    name='skills' \n                    multiple\n                    native\n                    value={selectedSkills}\n                    onChange={handleChangeMultiple}\n                    inputProps={{\n                      id: 'select-multiple-native',\n                    }}\n                  >\n                    {skills.map(skill => (\n                      <option key={skill.id} value={skill.name}>\n                        {skill.name}\n                      </option>\n                    ))}\n                  </Select>\n              </FormControl>\n              </Grid>\n              \n              <Button\n                fullWidth\n                variant='contained'\n                className={classes.btnSubmit}\n                onClick={(e)=>handleSubmit(e)}\n              >\n                submit\n              </Button>\n            </form>\n        </Grid>\n\n\n\n      </DialogContent>\n      \n    </MuiDialog>\n  )\n}\n\nexport default CUDProjectDialog\n"]},"metadata":{},"sourceType":"module"}