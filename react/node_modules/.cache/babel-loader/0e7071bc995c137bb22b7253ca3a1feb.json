{"ast":null,"code":"var _jsxFileName = \"/home/osama/Documents/portfolio/react/src/component/projects/ProjectCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Card, CardMedia, Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport ProjectDialog from './ProjectDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"relative\",\n    '& .MuiCardMedia-root': {\n      backgroundImage: styleProps => `url(${styleProps.image})`\n    },\n    '&:hover': {\n      '& .MuiCardMedia-root': {\n        backgroundImage: 'none'\n      },\n      cursor: 'pointer',\n      '& $cardHover': {\n        display: \"block\",\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"50%\",\n        transform: 'translate(-50%, -50%)'\n      }\n    }\n  },\n  cardHover: {\n    display: \"none\"\n  }\n}));\n\nfunction ProjectCard(props) {\n  _s();\n\n  const {\n    project,\n    name,\n    description,\n    project_images,\n    skills\n  } = props;\n  const [openDetail, setOpenDetail] = React.useState(false);\n  const styleProps = {\n    image: project_images[0].image\n  };\n  const classes = useStyles(styleProps);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        style: {\n          height: \"280px\"\n        },\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cardHover,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            fontWeight: 800\n          },\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"secondary\",\n          style: {\n            fontWeight: 400,\n            marginTop: '10px'\n          },\n          children: skills.map(skill => skill.name + '/').slice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          style: {\n            marginTop: '50px'\n          },\n          onClick: () => setOpenDetail(true),\n          children: \"Learn more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectDialog, {\n      openDetail: openDetail,\n      setOpenDetail: setOpenDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectCard, \"/Bdd9MKAso5QyacE2qqspsH8Ifg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProjectCard;\nexport default ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["/home/osama/Documents/portfolio/react/src/component/projects/ProjectCard.js"],"names":["React","Grid","Card","CardMedia","Typography","Button","makeStyles","ProjectDialog","useStyles","theme","root","position","backgroundImage","styleProps","image","cursor","display","top","left","transform","cardHover","ProjectCard","props","project","name","description","project_images","skills","openDetail","setOpenDetail","useState","classes","height","fontWeight","marginTop","map","skill","slice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Grid, Card, CardMedia, Typography, Button} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/styles'\n\nimport ProjectDialog from './ProjectDialog'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"relative\",\n\n    '& .MuiCardMedia-root': {\n      backgroundImage: styleProps => `url(${styleProps.image})`,\n    },\n    '&:hover': {\n      '& .MuiCardMedia-root': {\n      backgroundImage: 'none',\n    },\n      cursor: 'pointer',\n\n      '& $cardHover': {\n      display: \"block\",\n      position: \"absolute\",\n      top: \"40%\",\n      left: \"50%\",\n      transform: 'translate(-50%, -50%)'\n    },\n    }\n\n  },\n  cardHover: {\n    display: \"none\"\n  },\n\n}))\n\n\nfunction ProjectCard(props) {\n  const{project, name, description, project_images, skills} = props\n  const [openDetail, setOpenDetail] = React.useState(false)\n\n  const styleProps = {image:project_images[0].image }\n  const classes = useStyles(styleProps)\n\n  return (\n    <Grid item xs={12} sm={4}>\n      <Card className={classes.root}>\n        <CardMedia\n        style={{height: \"280px\"}}\n        src = ''\n        />\n        <div className={classes.cardHover}>\n          <Typography variant=\"h6\" style={{fontWeight: 800}}>{project}</Typography>\n          <Typography variant=\"body1\" color=\"secondary\" style={{fontWeight: 400, marginTop: '10px'}}> \n            {skills.map(skill => skill.name + '/').slice}\n          </Typography>\n          <Button variant=\"outlined\" color=\"primary\" style={{marginTop: '50px'}} onClick={() => setOpenDetail(true)}>Learn more</Button>\n        </div>\n      </Card>\n      <ProjectDialog openDetail={openDetail} setOpenDetail={setOpenDetail}/>\n    </Grid>\n  )\n}\n\nexport default ProjectCard\n"]},"metadata":{},"sourceType":"module"}