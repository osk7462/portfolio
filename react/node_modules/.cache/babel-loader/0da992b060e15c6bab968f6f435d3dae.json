{"ast":null,"code":"var _jsxFileName = \"/home/osama/Documents/portfolio/react/src/ContextApi.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport axiosInstance from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst getLoggedIn = () => {\n  if (localStorage.getItem('access_token') !== 'null') return true;else return false;\n};\n\nconst initialProfile = {\n  id: '',\n  name: '',\n  image: '',\n  resume: '',\n  description: '',\n  skills: [{\n    id: '',\n    name: '',\n    proficiency: ''\n  }]\n};\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [darkMode, setDarkMode] = React.useState(false);\n  const [loggedIn, setLoggedIn] = React.useState(getLoggedIn);\n  const [profile, setProfile] = React.useState(initialProfile);\n  const [loading, setLoading] = React.useState(true);\n  const [projects, setProjects] = React.useState([]);\n\n  const fetch = async () => {\n    axiosInstance.get('about/').then(response => {\n      setProfile({ ...response.data[0]\n      });\n      setLoading(false);\n    }).catch(error => {\n      console.log(\"error loading profile\", error);\n    });\n    setLoading(true);\n    axiosInstance.get('projects/').then(response => {\n      setProjects(response.data);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  React.useEffect(() => {\n    fetch();\n  }, []);\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      darkMode,\n      setDarkMode,\n      loggedIn,\n      setLoggedIn,\n      profile,\n      setProfile,\n      loading,\n      setLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AppProvider, \"yvzm/pmQsTVuqf3MXP9V4fsvWag=\");\n\n_c = AppProvider;\nexport const GlobalContext = () => {\n  _s2();\n\n  return React.useContext(AppContext);\n};\n\n_s2(GlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = GlobalContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppProvider\");\n$RefreshReg$(_c2, \"GlobalContext\");","map":{"version":3,"sources":["/home/osama/Documents/portfolio/react/src/ContextApi.js"],"names":["React","axiosInstance","AppContext","createContext","getLoggedIn","localStorage","getItem","initialProfile","id","name","image","resume","description","skills","proficiency","AppProvider","children","darkMode","setDarkMode","useState","loggedIn","setLoggedIn","profile","setProfile","loading","setLoading","projects","setProjects","fetch","get","then","response","data","catch","error","console","log","err","useEffect","GlobalContext","useContext"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axiosInstance from './axios'\n\nconst AppContext = React.createContext()\n\nconst getLoggedIn = () => {\n  if (localStorage.getItem('access_token') !== 'null')\n    return true\n  else \n    return false\n}\n\n\nconst initialProfile = {\n    id: '',\n    name: '',\n    image: '',\n    resume: '',\n    description: '',\n    skills: [\n      {\n        id: '',\n        name: '',\n        proficiency: ''\n      }\n    ]\n}\n\nexport const AppProvider = ({children}) => {\n  const [darkMode, setDarkMode] = React.useState(false)\n  const [loggedIn, setLoggedIn] = React.useState(getLoggedIn)\n  const[profile, setProfile] = React.useState(initialProfile)\n  const[loading, setLoading] = React.useState(true)\n  const [projects, setProjects] = React.useState([])\n\n  const fetch = async () => {\n    axiosInstance\n    .get('about/')\n    .then (response => {\n      setProfile({...response.data[0]})\n      setLoading(false)\n    })\n    .catch (error => {\n      console.log(\"error loading profile\", error)\n    })\n    setLoading(true)\n    axiosInstance.get('projects/')\n    .then(response => {\n      setProjects(response.data)\n      setLoading(false)\n    })\n    .catch(err => console.log(err))\n  }\n \n\n  React.useEffect(()=>{\n    fetch()\n  },[])\n\n  console.log(projects)\n\n  return <AppContext.Provider value={{\n    darkMode, setDarkMode,\n    loggedIn, setLoggedIn,\n    profile,setProfile,\n    loading, setLoading,\n    }}>\n    {children}\n  </AppContext.Provider>\n}\n\n\nexport const GlobalContext = () => {\n  return React.useContext(AppContext)\n\n}\n"]},"metadata":{},"sourceType":"module"}