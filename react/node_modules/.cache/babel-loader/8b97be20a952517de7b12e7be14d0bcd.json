{"ast":null,"code":"var _jsxFileName = \"/home/osama/Desktop/portfolio/osama-khan/src/component/Header/Dialog.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // MuiComponent\n\nimport { Dialog as MuiDialog } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { TextField as MuiTextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { GlobalContext } from '../../ContextApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0\n  },\n  textField: {\n    margin: theme.spacing(1)\n  },\n  closeButton: {\n    marginLeft: '90%',\n    fontSize: '1.5rem'\n  }\n}));\n\nconst TextField = ({ ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(MuiTextField, {\n    fullWidth: true,\n    size: \"small\",\n    variant: \"outlined\",\n    ...others\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TextField;\n\nconst InputButton = ({\n  children,\n  ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    ...others,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputButton;\n\nfunction Dialog({\n  open,\n  setClose\n}) {\n  _s();\n\n  const {\n    profile,\n    loading\n  } = GlobalContext();\n  const [profileInput, setProfileInput] = React.useState(profile);\n  const classes = useStyles();\n\n  const handleChange = e => {\n    const {\n      name\n    } = e.target;\n    let value = '';\n\n    if (name === 'image' || name === 'resume') {\n      value = e.target.files[0];\n    } else {\n      value = e.target.value;\n    }\n\n    setProfileInput(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  React.useEffect(() => {\n    setProfileInput(profile);\n  }, [loading]);\n  console.log(profileInput);\n  return /*#__PURE__*/_jsxDEV(MuiDialog, {\n    open: open,\n    maxWidth: \"sm\",\n    onClose: () => setClose(true),\n    classes: {\n      paper: classes.paper\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        align: \"right\",\n        color: \"secondary\",\n        className: classes.closeButton,\n        onClick: () => setClose(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            label: \"name\",\n            value: profileInput.name,\n            className: classes.textField,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"description\",\n            label: \"description\",\n            value: profileInput.description,\n            className: classes.textField,\n            onChange: handleChange,\n            multiline: true,\n            rows: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n            className: classes.textField,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              name: \"image\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n            className: classes.input,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              name: \"resume\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dialog, \"jwmIIOMwtuH22XnK4BwzZVF0QmA=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Dialog;\nexport default Dialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"InputButton\");\n$RefreshReg$(_c3, \"Dialog\");","map":{"version":3,"sources":["/home/osama/Desktop/portfolio/osama-khan/src/component/Header/Dialog.js"],"names":["React","Dialog","MuiDialog","DialogTitle","DialogContent","Typography","Grid","TextField","MuiTextField","Button","makeStyles","GlobalContext","useStyles","theme","paper","position","top","textField","margin","spacing","closeButton","marginLeft","fontSize","others","InputButton","children","open","setClose","profile","loading","profileInput","setProfileInput","useState","classes","handleChange","e","name","target","value","files","prevState","useEffect","console","log","description","input"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\n// MuiComponent\nimport {Dialog as MuiDialog} from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport {DialogContent} from '@material-ui/core'\nimport {Typography} from '@material-ui/core'\nimport {Grid} from '@material-ui/core'\nimport {TextField as MuiTextField} from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport {GlobalContext} from '../../ContextApi'\n\nconst useStyles = makeStyles(theme=> ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n  },\n  textField : {\n    margin: theme.spacing(1)\n  },\n\n  closeButton : {\n    marginLeft: '90%',\n    fontSize: '1.5rem'\n  }\n\n}))\n\n\n\nconst TextField = ({...others}) => {\n  return (\n    <MuiTextField \n      fullWidth\n      size=\"small\"\n      variant=\"outlined\"\n      {...others}\n    />\n  )\n}\n\nconst InputButton = ({children, ...others}) => {\n  return (\n    <Button \n      variant=\"contained\"\n      component=\"label\"\n      color='primary'\n      {...others}\n    >\n      {children}\n    </Button>\n  )\n}\n\n\n\n\n\n\n\n\n\nfunction Dialog({open, setClose}) {\n  const {profile, loading} = GlobalContext()\n  const [profileInput, setProfileInput] = React.useState(profile)\n  const classes = useStyles()\n\n\n  const handleChange = (e) => {\n    const {name} = e.target\n    let value = ''\n    if (name === 'image' || name === 'resume') {\n      value = e.target.files[0]\n    } else {\n      value = e.target.value\n    }\n    setProfileInput(prevState => {\n      return {...prevState, [name]: value}\n    })\n  }\n\n  React.useEffect(() => {\n    setProfileInput(profile)\n  }, [loading])\n\n  console.log(profileInput)\n\n  return (\n    <MuiDialog \n      open={open}\n      maxWidth=\"sm\"\n      onClose={()=>setClose(true)}\n      classes = {{paper: classes.paper}}\n    >\n      <DialogTitle>\n        <Button\n         align=\"right\"\n         color='secondary'\n         className={classes.closeButton}\n         onClick={()=>setClose(false)}\n        >\n          X\n        </Button>\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container justify=\"center\" >\n              <Grid item xs={12}>\n                <TextField \n                  name=\"name\"\n                  label=\"name\"  \n                  value={profileInput.name}\n                  className={classes.textField}\n                  onChange={handleChange}\n                />\n                <TextField \n                  name=\"description\"\n                  label=\"description\"  \n                  value={profileInput.description}\n                  className={classes.textField}\n                  onChange={handleChange}\n                  multiline\n                  rows={5}\n                />\n\n                <InputButton\n                  className={classes.textField}\n                >\n                  <input\n                    type=\"file\"\n                    accept='image/*'\n                    name='image'\n                    onChange={handleChange}\n                  />\n                </InputButton>\n\n                <InputButton\n                  className={classes.input}                \n                \n                >\n\n                  <input \n                    type='file'\n                    accept='application/pdf'\n                    name='resume'\n                    onChange={handleChange}\n                  />\n                </InputButton>\n                \n                \n                \n              </Grid>\n        </Grid>\n\n\n\n      </DialogContent>\n      \n    </MuiDialog>\n  )\n}\n\nexport default Dialog\n"]},"metadata":{},"sourceType":"module"}