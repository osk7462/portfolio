{"ast":null,"code":"var _jsxFileName = \"/home/osama/Desktop/portfolio/osama-khan/src/component/Header/Dialog.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // MuiComponent\n\nimport { Dialog as MuiDialog } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { TextField as MuiTextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { GlobalContext } from '../../ContextApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0\n  },\n  input: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    '& form > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  closeButton: {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n  skills: {\n    fontWeight: 800,\n    opacity: 0.8\n  }\n}));\n\nconst TextField = ({ ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(MuiTextField, {\n    size: \"small\",\n    variant: \"outlined\",\n    ...others\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TextField;\n\nconst InputButton = ({\n  children,\n  ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    ...others,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputButton;\nconst initialSkill = {\n  skill_name: '',\n  skill_proficiency: ''\n};\nconst initialError = {\n  error: false,\n  errorIndex: -1,\n  errorLabel: '',\n  errorText: ''\n};\n\nfunction Dialog({\n  open,\n  setClose\n}) {\n  _s();\n\n  const {\n    profile,\n    loading\n  } = GlobalContext();\n  const [profileInput, setProfileInput] = React.useState(profile);\n  const [skill, setSkill] = React.useState(initialSkill);\n  const [error, setError] = React.useState();\n  let demo = profile;\n  const classes = useStyles();\n\n  const handleChange = (e, index) => {\n    let {\n      name\n    } = e.target;\n    let value = '';\n\n    if (name === 'image' || name === 'resume') {\n      value = e.target.files[0];\n    } else {\n      value = e.target.value;\n    }\n\n    if (name.includes('skill', 0)) {\n      name = name.substr(6);\n\n      if (name === 'proficiency' && value >= '0' && value <= '9') {\n        let tempProfileInput = { ...profileInput\n        };\n        tempProfileInput.skills[index] = { ...tempProfileInput.skills[index],\n          [name]: value\n        };\n        setProfileInput(tempProfileInput);\n      } else {\n        setError({\n          error: true,\n          errorIndex: index,\n          errorLabel: 'proficiency',\n          errorText: 'only number is allow'\n        });\n      } // setSkill(prevState => {\n      //   return {...prevState, [name]: value}\n      // })\n\n    } else {\n      setProfileInput(prevState => {\n        return { ...prevState,\n          [name]: value\n        };\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    setProfileInput(profile);\n  }, [loading]);\n  console.log(profileInput);\n  return /*#__PURE__*/_jsxDEV(MuiDialog, {\n    open: open,\n    maxWidth: \"sm\",\n    onClose: () => setClose(true),\n    classes: {\n      paper: classes.paper\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        align: \"right\",\n        color: \"secondary\",\n        className: classes.closeButton,\n        onClick: () => setClose(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.input,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            name: \"name\",\n            label: \"name\",\n            value: profileInput.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            name: \"description\",\n            label: \"description\",\n            value: profileInput.description,\n            onChange: handleChange,\n            multiline: true,\n            rows: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              name: \"image\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              name: \"resume\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.skills,\n            children: \"skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), profileInput.skills.map((skill, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"skill name\",\n                name: \"skill_name\",\n                value: skill.name,\n                onChange: e => handleChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"proficiency\",\n                name: \"skill_proficiency\",\n                value: skill.proficiency,\n                type: \"number\",\n                onChange: e => handleChange(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true);\n          }), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Add another\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dialog, \"4xbMOBd2ENh8xPCI1+mIfCbcwrg=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Dialog;\nexport default Dialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"InputButton\");\n$RefreshReg$(_c3, \"Dialog\");","map":{"version":3,"sources":["/home/osama/Desktop/portfolio/osama-khan/src/component/Header/Dialog.js"],"names":["React","Dialog","MuiDialog","DialogTitle","DialogContent","Typography","Grid","TextField","MuiTextField","Button","makeStyles","GlobalContext","useStyles","theme","paper","position","top","input","margin","spacing","closeButton","marginLeft","fontSize","skills","fontWeight","opacity","others","InputButton","children","initialSkill","skill_name","skill_proficiency","initialError","error","errorIndex","errorLabel","errorText","open","setClose","profile","loading","profileInput","setProfileInput","useState","skill","setSkill","setError","demo","classes","handleChange","e","index","name","target","value","files","includes","substr","tempProfileInput","prevState","useEffect","console","log","description","map","proficiency"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\n// MuiComponent\nimport {Dialog as MuiDialog} from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport {DialogContent} from '@material-ui/core'\nimport {Typography} from '@material-ui/core'\nimport {Grid} from '@material-ui/core'\nimport {TextField as MuiTextField} from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport {GlobalContext} from '../../ContextApi'\n\nconst useStyles = makeStyles(theme=> ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n  },\n  input : {\n    '& > *':{\n      margin: theme.spacing(1)\n    },\n    '& form > *':{\n      margin: theme.spacing(1)\n    }\n    \n  },\n\n  closeButton : {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n\n  skills : {\n    fontWeight: 800,\n    opacity: 0.8\n  }\n\n}))\n\n\n\nconst TextField = ({...others}) => {\n  return (\n    <MuiTextField \n      size=\"small\"\n      variant=\"outlined\"\n      {...others}\n    />\n  )\n}\n\nconst InputButton = ({children, ...others}) => {\n  return (\n    <Button \n      variant=\"contained\"\n      component=\"label\"\n      color='primary'\n      {...others}\n    >\n      {children}\n    </Button>\n  )\n}\n\n\n\n\n\n\nconst initialSkill = {\n  skill_name: '',\n  skill_proficiency: ''\n}\n\nconst initialError = {\n  error: false,\n  errorIndex: -1,\n  errorLabel:'',\n  errorText: ''\n}\n\n\nfunction Dialog({open, setClose}) {\n  const {profile, loading} = GlobalContext()\n  const [profileInput, setProfileInput] = React.useState(profile)\n  const [skill, setSkill] = React.useState(initialSkill)\n  const [error, setError] = React.useState()\n  let demo  = profile\n\n\n  const classes = useStyles()\n\n\n  const handleChange =  (e, index) => {\n\n    let {name} = e.target\n    let value = ''\n    if (name === 'image' || name === 'resume') {\n      value = e.target.files[0]\n    } else {\n      value = e.target.value\n    }\n    if (name.includes('skill', 0)) {\n      name = name.substr(6)\n      if (name === 'proficiency' && value >= '0' && value <= '9') {\n        let tempProfileInput = {...profileInput}\n        tempProfileInput.skills[index] = {...tempProfileInput.skills[index], [name]: value}\n        setProfileInput(tempProfileInput)\n      } else {\n        setError(          \n          {\n            error: true,\n            errorIndex: index,\n            errorLabel: 'proficiency',\n            errorText: 'only number is allow'\n          }\n        )\n      }\n\n\n      \n\n      // setSkill(prevState => {\n      //   return {...prevState, [name]: value}\n      // })\n    } else {\n\n      setProfileInput(prevState => {\n      return {...prevState, [name]: value}\n    })\n    }\n\n\n\n    \n  }\n\n  React.useEffect(() => {\n    setProfileInput(profile)\n  }, [loading])\n\n  console.log(\n    profileInput)\n\n  return (\n    <MuiDialog \n      open={open}\n      maxWidth=\"sm\"\n      onClose={()=>setClose(true)}\n      classes = {{paper: classes.paper}}\n    >\n      <DialogTitle>\n        <Button\n         align=\"right\"\n         color='secondary'\n         className={classes.closeButton}\n         onClick={()=>setClose(false)}\n        >\n          X\n        </Button>\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container justify=\"center\" >\n              <Grid item xs={12} className={classes.input}>\n                <TextField \n                  fullWidth\n                  name=\"name\"\n                  label=\"name\"  \n                  value={profileInput.name}\n                  onChange={handleChange}\n                />\n                <TextField \n                  fullWidth\n                  name=\"description\"\n                  label=\"description\"  \n                  value={profileInput.description}\n                  onChange={handleChange}\n                  multiline\n                  rows={5}\n                />\n\n                <InputButton\n                >\n                  <input\n                    type=\"file\"\n                    accept='image/*'\n                    name='image'\n                    onChange={handleChange}\n                  />\n                </InputButton>\n\n                <InputButton            \n                \n                >\n\n                  <input \n                    type='file'\n                    accept='application/pdf'\n                    name='resume'\n                    onChange={handleChange}\n                  />\n                </InputButton>\n                \n                <Typography\n                  variant='h6'\n                  className={classes.skills}\n                >\n                  skills\n                </Typography>\n                 \n                {\n                  profileInput.skills.map( (skill, index) => {\n                    \n                    return (\n                        <>\n                          <TextField \n                            label='skill name'\n                            name='skill_name'\n                            value={skill.name}\n                            onChange={ e => handleChange(e, index)}\n\n                          \n                          />\n                          <TextField \n                            label='proficiency'\n                            name='skill_proficiency'\n                            value={skill.proficiency}\n                            type='number'\n                            onChange={e => handleChange(e, index)}\n                          />\n                        </>\n                    )\n                  \n                  })\n\n                }\n                <Button \n                  color='primary'\n                  variant='contained'\n                  \n                >\n\n                Add another\n\n\n                </Button>\n\n\n\n\n                \n\n\n\n\n\n              </Grid>\n        </Grid>\n\n\n\n      </DialogContent>\n      \n    </MuiDialog>\n  )\n}\n\nexport default Dialog\n"]},"metadata":{},"sourceType":"module"}