{"ast":null,"code":"var _jsxFileName = \"/home/osama/Documents/portfolio/react/src/component/dialog/CUDProjectDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // MuiComponent\n\nimport { Dialog as MuiDialog } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { TextField as MuiTextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { GlobalContext } from '../../ContextApi';\nimport axiosInstance from '../../axios';\nimport axios from 'axios';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useHistory } from 'react-router-dom';\nimport { FormControl } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0\n  },\n  input: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    '& form > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  closeButton: {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n  skills: {\n    fontWeight: 800,\n    opacity: 0.8\n  },\n  skillRoot: {\n    display: 'flex',\n    alignItems: 'baseline',\n    '& > *': {\n      margin: theme.spacing(0.3)\n    }\n  },\n  btnSubmit: {\n    background: theme.palette.success.dark,\n    color: 'white',\n    marginBottom: theme.spacing(1),\n    '&:hover': {\n      background: theme.palette.success.dark\n    }\n  }\n}));\n\nconst TextField = ({ ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(MuiTextField, {\n    size: \"small\",\n    variant: \"outlined\",\n    ...others\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TextField;\n\nconst InputButton = ({\n  children,\n  ...others\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    ...others,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputButton;\n\nconst slugify = text => {\n  return text.toString().toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w\\-]+/g, '').replace(/\\-\\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n};\n\nconst typeOfAction = action => {\n  return action.type === 'UPDATE';\n};\n\nconst getSelectedSkills = action => {\n  if (action.type === 'UPDATE') {\n    let skills = [];\n    action.project.project_skills.forEach(skill => {\n      skills.push(skill.name);\n    });\n    return skills;\n  }\n\n  return [];\n};\n\nfunction CUDProjectDialog({\n  open,\n  setOpen,\n  action\n}) {\n  _s();\n\n  const {\n    skills\n  } = GlobalContext();\n  const [selectedSkills, setSelectedSkills] = React.useState(getSelectedSkills(action));\n  const [update, setupdate] = React.useState(typeOfAction(action));\n  const [project, setProject] = React.useState(action.project);\n  const history = useHistory();\n  const form = React.useRef(null);\n  const classes = useStyles();\n\n  const handleChangeMultiple = e => {\n    const {\n      options\n    } = e.target;\n    const value = [];\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setSelectedSkills(value);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProject(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(form.current);\n    formData.append('slug', slugify(formData.get('project')));\n    console.log(formData.get('images').name);\n\n    if (formData.get('images').name === \"\") {\n      formData.delete('images');\n    } else {\n      console.log('not Empty');\n    }\n\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null,\n        'Content-Type': 'multipart-form-data'\n      }\n    };\n\n    if (update) {\n      const url = `http://127.0.0.1:8000/projects/${project.slug}/`;\n      axios.patch(url, formData, config).then(response => console.log(response)).catch(error => console.log(error));\n    } else {\n      const url = `http://127.0.0.1:8000/projects/`;\n      axios.post(url, formData, config).then(response => console.log(response)).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiDialog, {\n    open: open,\n    maxWidth: \"sm\",\n    onClose: () => setOpen(true),\n    classes: {\n      paper: classes.paper\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        align: \"right\",\n        color: \"secondary\",\n        className: classes.closeButton,\n        onClick: () => setOpen(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          ref: form,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.input,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              name: \"project\",\n              label: \"project\",\n              inputProps: update ? {\n                value: project.project,\n                onChange: handleChange\n              } : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              name: \"name\",\n              label: \"name\",\n              inputProps: update ? {\n                value: project.name,\n                onChange: handleChange\n              } : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              name: \"description\",\n              label: \"description\",\n              multiline: true,\n              rows: 5,\n              inputProps: update ? {\n                value: project.description,\n                onChange: handleChange\n              } : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              name: \"link\",\n              label: \"link\",\n              inputProps: update ? {\n                value: project.link,\n                onChange: handleChange\n              } : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                name: \"images\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                shrink: true,\n                htmlFor: \"select-multiple-native\",\n                children: \"Skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"skills\",\n                multiple: true,\n                native: true,\n                value: selectedSkills,\n                onChange: handleChangeMultiple,\n                inputProps: {\n                  id: 'select-multiple-native'\n                },\n                children: skills.map(skill => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: skill.name,\n                  children: skill.name\n                }, skill.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            className: classes.btnSubmit,\n            onClick: e => handleSubmit(e),\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), update && /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            color: \"secondary\",\n            variant: \"contained\",\n            onClick: e => handleSubmit(e),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CUDProjectDialog, \"v0zfYJMuLjwI93NP2bfoevTiq78=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c3 = CUDProjectDialog;\nexport default CUDProjectDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"InputButton\");\n$RefreshReg$(_c3, \"CUDProjectDialog\");","map":{"version":3,"sources":["/home/osama/Documents/portfolio/react/src/component/dialog/CUDProjectDialog.js"],"names":["React","Dialog","MuiDialog","DialogTitle","DialogContent","Typography","Grid","TextField","MuiTextField","Button","makeStyles","GlobalContext","axiosInstance","axios","IconButton","DeleteIcon","useHistory","FormControl","InputLabel","Select","useStyles","theme","paper","position","top","input","margin","spacing","closeButton","marginLeft","fontSize","skills","fontWeight","opacity","skillRoot","display","alignItems","btnSubmit","background","palette","success","dark","color","marginBottom","others","InputButton","children","slugify","text","toString","toLowerCase","replace","typeOfAction","action","type","getSelectedSkills","project","project_skills","forEach","skill","push","name","CUDProjectDialog","open","setOpen","selectedSkills","setSelectedSkills","useState","update","setupdate","setProject","history","form","useRef","classes","handleChangeMultiple","e","options","target","value","i","length","selected","handleChange","prevState","handleSubmit","preventDefault","formData","FormData","current","append","get","console","log","delete","config","headers","Authorization","localStorage","getItem","url","slug","patch","then","response","catch","error","post","onChange","undefined","description","link","id","map"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\n// MuiComponent\nimport {Dialog as MuiDialog} from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport {DialogContent} from '@material-ui/core'\nimport {Typography} from '@material-ui/core'\nimport {Grid} from '@material-ui/core'\nimport {TextField as MuiTextField} from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport {GlobalContext} from '../../ContextApi'\nimport axiosInstance from '../../axios'\nimport axios from 'axios'\nimport { IconButton } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useHistory} from 'react-router-dom'\nimport { FormControl } from '@material-ui/core'\nimport { InputLabel } from '@material-ui/core'\nimport {Select} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme=> ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n  },\n  input : {\n    '& > *':{\n      margin: theme.spacing(1)\n    },\n    '& form > *':{\n      margin: theme.spacing(1)\n    }\n    \n  },\n\n  closeButton : {\n    marginLeft: '90%',\n    fontSize: '1.2rem'\n  },\n\n  skills : {\n    fontWeight: 800,\n    opacity: 0.8\n  },\n\n  skillRoot: {\n    display: 'flex',\n    alignItems: 'baseline',\n  \n    '& > *': {\n      margin: theme.spacing(0.3)\n    },\n    \n    \n  },\n\n  btnSubmit: {\n    background: theme.palette.success.dark,\n    color: 'white',\n    marginBottom: theme.spacing(1),\n    '&:hover': {\n      background: theme.palette.success.dark\n    }\n  },\n\n\n\n}))\n\n\n\nconst TextField = ({...others}) => {\n  return (\n    <MuiTextField \n      size=\"small\"\n      variant=\"outlined\"\n      {...others}\n    />\n  )\n}\n\nconst InputButton = ({children, ...others}) => {\n  return (\n    <Button \n      variant=\"contained\"\n      component=\"label\"\n      color='primary'\n      {...others}\n    >\n      {children}\n    </Button>\n  )\n}\n\n\nconst slugify = (text) => {\n  return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')   \n    .replace(/[^\\w\\-]+/g, '')   \n    .replace(/\\-\\-+/g, '-')         \n    .replace(/^-+/, '')           \n    .replace(/-+$/, ''); \n}\n\n\nconst typeOfAction = (action) => {\n\n  return action.type === 'UPDATE'\n}\n\nconst getSelectedSkills = (action) => {\n  if (action.type === 'UPDATE') {\n    let skills = []\n    action.project.project_skills.forEach((skill) => {\n      skills.push(skill.name)\n    } )\n    return skills\n  } \n  return []\n} \n\nfunction CUDProjectDialog({open, setOpen, action}) {\n\n  const {skills} = GlobalContext()\n  const[selectedSkills, setSelectedSkills] = React.useState(getSelectedSkills(action))\n  const [update, setupdate] = React.useState(typeOfAction(action))\n  const [project, setProject] = React.useState(action.project)\n\n\n  const history = useHistory()\n  const form = React.useRef(null)\n\n  const classes = useStyles()\n\n  const handleChangeMultiple = (e) => {\n    const {options} = e.target\n    const value = []\n    for(let i=0; i<options.length; i++){\n      if (options[i].selected) {\n      value.push(options[i].value)\n      }\n    }\n    setSelectedSkills(value)\n  }\n  \n  const handleChange = (e) => {\n    const {name, value} = e.target\n    \n    setProject(prevState => {\n      return {...prevState, [name]: value}\n    })\n\n\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const formData = new FormData(form.current)\n    formData.append('slug', slugify(formData.get('project')))\n    console.log(formData.get('images').name)\n    if (formData.get('images').name === \"\") {\n      formData.delete('images')\n    } else {\n      console.log('not Empty')\n    }\n\n\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem('access_token')\n      ? 'JWT ' + localStorage.getItem('access_token')\n      : null,\t\n        'Content-Type': 'multipart-form-data'\n      }\n    }\n    \n\n    if (update) {\n      const url = `http://127.0.0.1:8000/projects/${project.slug}/`\n      axios.patch(url, formData, config)\n      .then(response => console.log(response))\n      .catch(error => console.log(error))\n    } else {\n      const url = `http://127.0.0.1:8000/projects/`\n      axios.post(url, formData, config)\n      .then(response => console.log(response))\n      .catch(error => console.log(error))\n    }\n  }\n\n  return (\n    <MuiDialog \n      open={open}\n      maxWidth=\"sm\"\n      onClose={()=>setOpen(true)}\n      classes = {{paper: classes.paper}}\n    >\n      <DialogTitle>\n        <Button\n         align=\"right\"\n         color='secondary'\n         className={classes.closeButton}\n         onClick={()=>setOpen(false)}\n        >\n          X\n        </Button>\n      </DialogTitle>\n\n      <DialogContent>\n        <Grid container justify=\"center\" >\n            <form ref={form}>\n              <Grid item xs={12} className={classes.input}>\n                <TextField \n                  fullWidth\n                  name=\"project\"\n                  label=\"project\"\n                  inputProps={\n                    update ? {\n                      value: project.project,\n                      onChange: handleChange\n                    } : undefined\n                  }  \n                />\n                <TextField \n                  fullWidth\n                  name=\"name\"\n                  label=\"name\"  \n                  inputProps={\n                    update ? {\n                      value: project.name,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                />\n                <TextField \n                  fullWidth\n                  name=\"description\"\n                  label=\"description\"  \n                  multiline\n                  rows={5}\n                  inputProps={\n                    update ? {\n                      value: project.description,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                />\n                <TextField \n                  fullWidth\n                  name=\"link\"\n                  label=\"link\"  \n                  inputProps={\n                    update ? {\n                      value: project.link,\n                      onChange: handleChange\n                    } : undefined\n                  }\n                  \n                />\n\n                <InputButton>\n\n                  <input \n                    type='file'\n                    accept='image/*'\n                    name='images'\n                    multiple={true}\n                    \n                  />\n                </InputButton>\n                \n               \n                <FormControl fullWidth >\n                  <InputLabel shrink htmlFor=\"select-multiple-native\">\n                    Skills\n                  </InputLabel>\n                  <Select\n                    name='skills' \n                    multiple\n                    native\n                    value={selectedSkills}\n                    onChange={handleChangeMultiple}\n                    inputProps={{\n                      id: 'select-multiple-native',\n                    }}\n                  >\n                    {skills.map(skill => (\n                      <option key={skill.id} value={skill.name}>\n                        {skill.name}\n                      </option>\n                    ))}\n                  </Select>\n              </FormControl>\n              </Grid>\n              \n              <Button\n                fullWidth\n                variant='contained'\n                className={classes.btnSubmit}\n                onClick={(e)=>handleSubmit(e)}\n              >\n                submit\n              </Button>\n              {\n                update && \n                  <Button\n                  fullWidth\n                  color=\"secondary\"\n                  variant='contained'\n                  onClick={(e)=>handleSubmit(e)}\n                >\n                  delete\n                </Button>\n              }\n            </form>\n        </Grid>\n\n\n\n      </DialogContent>\n      \n    </MuiDialog>\n  )\n}\n\nexport default CUDProjectDialog\n"]},"metadata":{},"sourceType":"module"}